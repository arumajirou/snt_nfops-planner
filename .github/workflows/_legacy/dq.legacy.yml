# .github/workflows/dq.yml（main に置く定義）
name: dq
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11", cache: pip }
      - name: Install deps (record status)
        id: install
        run: |
          set +e
          export PIP_NO_COLOR=1
          python -m pip install -U pip           |& tee -a pip-install.log
          pip install -e '.[dev]'                |& tee -a pip-install.log
          pip install "pandas>=2.2" "pyarrow>=16"|& tee -a pip-install.log
          ec=${PIPESTATUS[0]}
          echo "exit_code=$ec" >> "$GITHUB_OUTPUT"; echo "$ec" > .install_exit_code; exit 0
      - name: Pip cache summary
        run: |
          hits=$(grep -c "Using cached" pip-install.log 2>/dev/null || true)
          downloads=$(grep -c "Downloading"  pip-install.log 2>/dev/null || true)
          total=$((hits+downloads))
          rate="n/a"; [ "$total" -gt 0 ] && rate=$(awk -v h="$hits" -v t="$total" 'BEGIN{printf "%.2f%%",(t? h/t*100:0)}')
          {
            echo "## pip cache summary"
            echo "- Using cached: $hits"
            echo "- Downloading : $downloads"
            echo "- Hit rate    : $rate"
          } >> "$GITHUB_STEP_SUMMARY"
      - name: Upload pip logs (smoke)
        if: always()
        uses: actions/upload-artifact@v4
        with: { name: pip-logs-smoke, path: pip-install.log, if-no-files-found: ignore }
      - name: dq presence (non-fatal)
        run: if command -v dq >/dev/null; then dq --help || true; else echo "dq not available; skip"; fi
      - name: Fail if install failed
        if: always()
        run: code="${{ steps.install.outputs.exit_code }}"; [ -z "$code" ] && [ -f .install_exit_code ] && code="$(cat .install_exit_code)"; [ "${code:-0}" -ne 0 ] && { echo "Install failed with exit $code"; exit "$code"; }

  gate:
    # 手動起動では走らない。PR のみ、ラベルがあり、入出力が存在するときに実行
    if: >
      github.event_name == 'pull_request' &&
      contains(github.event.pull_request.labels.*.name, 'dq-gate') &&
      hashFiles('schema/**/*.json') != '' &&
      hashFiles('data/**/*') != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -U pip && pip install -e '.[dev]' && pip install "pandas>=2.2" "pyarrow>=16"
      - name: Run dq
        run: dq --input data/sample.csv --schema schema/schema.json --chunksize 50000
