name: phase14-portal
on:
  push:
    branches: [ master, feature/phase-14-knowledge ]
    paths:
      - "src/phase14/**"
      - "scripts/phase14_run.py"
      - "ops/schemas/portal_config.yaml"
      - ".github/workflows/phase14-portal.yml"
  pull_request:
    branches: [ master ]
jobs:
  portal:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Run Phase14 portal
        env:
          PHASE14_REASON: 'ci'
        run: python scripts/phase14_run.py
      - name: Contract checks
        run: |
          set -e
          test -f ops/portals/index.md
          test -n "$(ls -d outputs/phase14/* 2>/dev/null)"
          # index.jsonl と summary.md が存在
          test -f outputs/phase14/*/index.jsonl
          test -f outputs/phase14/*/summary.md
          # メトリクス項目のキー検証（knowledge_posts など）
          python - <<'PY'
import json,glob,sys; p=glob.glob("outputs/phase14/*/metrics.json")[0]
m=json.load(open(p)); assert all(k in m for k in ["knowledge_posts","index_size_docs","sync_errors"])
print("metrics-ok")
PY
      - uses: actions/upload-artifact@v4
        with:
          name: phase14-portal
          path: outputs/phase14/**
          if-no-files-found: error

      - name: Install deps (phase14)
        run: pip install -r requirements-phase14.txt

      - name: Run with FAISS backend (and embedding)
        env:
          PHASE14_INDEX_BACKEND: faiss
        run: python scripts/phase14_run.py

      - name: Check artifacts (faiss or fallback)
        run: |
          set -e
          test -n "$(ls -d outputs/phase14/* 2>/dev/null)"
          # faiss.index があれば理想、無ければ index.jsonl が存在すれば契約OK
          (ls outputs/phase14/*/faiss.index >/dev/null 2>&1) || test -f outputs/phase14/*/index.jsonl

      - name: Show connectors log (should exist even if empty)
        run: |
          test -f outputs/phase14/*/connectors.log
